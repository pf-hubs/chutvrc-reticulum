#!{{ pkgPathFor "core/bash" }}/bin/bash

{{#if cfg.aws.alb_target_group_arn ~}}
  INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
  REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | sed 's/[a-z]$//')

  # Remove from all ALBs, do not care about smoke since it takes time to determine if this is a smoke box.
  echo "Removing from alb group $ALB_GROUP"
  aws elbv2 deregister-targets --target-group-arn="{{ ../cfg.aws.alb_target_group_arn }}" --targets="Id=$INSTANCE_ID" --region "$REGION"
  aws elbv2 deregister-targets --target-group-arn="{{ ../cfg.aws.smoke_alb_target_group_arn }}" --targets="Id=$INSTANCE_ID" --region "$REGION"
{{/if}}

export HOME={{ pkg.svc_var_path }}
export LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
export REPLACE_OS_VARS=true # Inlines OS vars into vm args
export MIX_ENV=prod

export RELEASE_CONFIG_DIR={{ pkg.svc_config_path }}
export RELEASE_MUTABLE_DIR={{ pkg.svc_var_path }}

export NODE_NAME=$(echo $HOSTNAME | sed 's/\([^.]*\)\(.*\)$/\1-local\2/')
export NODE_COOKIE={{ cfg.erlang.node_cookie }}

echo "Generating reticulum config"

escript {{ pkg.path }}/bin/conform --conf {{ pkg.svc_config_path }}/ret.prod.conf --schema {{ pkg.svc_config_path }}/ret.schema.exs --config {{ pkg.path }}/releases/{{ pkg.version }}/sys.config --output-dir {{ pkg.svc_config_path }}
